name: AGV System CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd backend
        npm ci
    
    - name: Create output directories
      run: |
        mkdir -p output/logs output/datasets output/analytics backend/uploads
    
    - name: Test server startup
      run: |
        cd backend
        timeout 10s npm start || exit_code=$?
        if [ $exit_code -eq 124 ]; then
          echo "Server started successfully (timeout as expected)"
          exit 0
        else
          echo "Server failed to start"
          exit 1
        fi
    
    - name: Check file permissions
      run: |
        ls -la run_agv_system.sh setup.sh
    
    - name: Validate project structure
      run: |
        test -f README.md
        test -f package.json
        test -f backend/server.js
        test -f frontend/index.html
        test -d images
        echo "Project structure validation passed"

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      run: |
        cd backend
        npm ci
    
    - name: Run linter (if available)
      run: |
        cd backend
        npm run lint || echo "No lint script found, skipping"

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      run: |
        cd backend
        npm ci
    
    - name: Run security audit
      run: |
        cd backend
        npm audit --audit-level high
